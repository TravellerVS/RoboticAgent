Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              project2_main.o (xprintf)
./libcompass.a(rmi_compass.o)
                              project2_main.o (initCompass)
./libcompass.a(can_pic32.o)   ./libcompass.a(rmi_compass.o) (CANConfigBaudRate)
/opt/pic32mx/lib/libm.a(w_atan32.o)
                              project2_main.o (atan2)
/opt/pic32mx/lib/libm.a(cos32.o)
                              project2_main.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              project2_main.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              project2_main.o (__subdf3)
/opt/pic32mx/lib/libm.a(w_sqrt.o)
                              project2_main.o (sqrt)
/opt/pic32mx/lib/libm.a(s_lib_ver.o)
                              /opt/pic32mx/lib/libm.a(w_atan32.o) (math_errhandling)
/opt/pic32mx/lib/libm.a(atan32.o)
                              /opt/pic32mx/lib/libm.a(w_atan32.o) (__mchp_atan2)
/opt/pic32mx/lib/libm.a(sqrt32.o)
                              /opt/pic32mx/lib/libm.a(w_sqrt.o) (__mchp_sqrt)
/opt/pic32mx/lib/libm.a(arc32.o)
                              /opt/pic32mx/lib/libm.a(atan32.o) (exatan)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libm.a(w_atan32.o) (errno)
/opt/pic32mx/lib/libc.a(exit.o)
                              project2_main.o (exit)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               project2_main.o
sensor_sensorReadings
                    0x7d88            project2_main.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
internal_values     0x228             project2_main.o
tick20ms            0x4               project2_main.o
movements_last_values
                    0x10              project2_main.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
tick40ms            0x4               project2_main.o
tick160ms           0x4               project2_main.o
sensor_filteredSensorReadings
                    0x58              project2_main.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              project2_main.o
tick10ms            0x4               project2_main.o
beh_correct_position
                    0x8               project2_main.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0xb738       46904  Application's executable code 
.rodata                 0x9d00cb38          0x744        1860  Read-only constant data 
.data                   0x9d00d27c          0x2ec         748  Data-initialization template 
.sdata                  0x9d00d568           0x20          32  Small data-initialization template 
      Total kseg0_program_mem used  :      0xc188       49544  9.5% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0xc464       50276  9.6% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x2ec         748  Initialized data 
.sdata                  0xa00002ec           0x20          32  Small initialized data 
.sbss                   0xa0000310          0x10c         268  Small uninitialized data 
.bss                    0xa0000420        0x124c0       74944  Uninitialized data 
.stack                  0xa00128e0         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :     0x148d8       84184  64.2% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :     0x148d8       84184  64.2% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD project2_main.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD ./libcompass.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 project2_main.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 project2_main.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 project2_main.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0xb738
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400     0x6f24 project2_main.o
                0x000000009d004b4c                add_field
                0x000000009d007440                get_priority_from_id
                0x000000009d00808c                dijkstra_shortest_path_to_destination
                0x000000009d007bc0                reset_follow_wall
                0x000000009d00697c                labyrinth_explore
                0x000000009d005bd0                signal_ERROR
                0x000000009d001e38                normalizeAngle
                0x000000009d007fc8                follow_beacon
                0x000000009d007168                execute_behavior
                0x000000009d004d2c                copy_path_values
                0x000000009d004aa8                new_MapField
                0x000000009d007be8                test_follow_wall
                0x000000009d003084                calculate_extra_values
                0x000000009d0061c8                correct_position
                0x000000009d004d60                get_dijkstra_weights
                0x000000009d004cd4                set_StartingField
                0x000000009d001d94                pid
                0x000000009d004a8c                new_MapFieldConnection
                0x000000009d0037f0                save_breadcrumbs
                0x000000009d004378                add_position_correction
                0x000000009d003420                normalize_obstacle_sensor
                0x000000009d004580                get_new_filteredSensorReadings
                0x000000009d007550                reset_default_priority_list
                0x000000009d005c78                signal_long_LED
                0x000000009d00374c                readPositionSensors
                0x000000009d0058a4                movement_fullstop
                0x000000009d0033ac                check_analog_sensors
                0x000000009d002464                isr_enc_left
                0x000000009d0063b8                reset_correct_position
                0x000000009d0070e8                reset_stop_at_beacon
                0x000000009d007630                reset_follow_starting_point
                0x000000009d005b00                test_stop_at_starting_point
                0x000000009d0044b0                get_sensorReadings
                0x000000009d005bac                test_labyrinth_return_home
                0x000000009d002eb8                sensors_finish
                0x000000009d0028c8                rad_to_deg
                0x000000009d0025fc                configBTUart
                0x000000009d0033f4                readOtherSensors
                0x000000009d002ab0                new_points_from_distance_and_angle
                0x000000009d001400                setServoPos
                0x000000009d005bb4                test_stop_at_beacon
                0x000000009d00251c                isr_enc_right
                0x000000009d006210                signal_short_LED
                0x000000009d005e40                rotate_to_angle
                0x000000009d007578                behaviors_init
                0x000000009d0070f0                reset_wounder
                0x000000009d001548                readAnalogSensors
                0x000000009d005b74                test_follow_path
                0x000000009d0027f8                angle_difference
                0x000000009d00496c                get_closest_field
                0x000000009d001a88                getRobotPos
                0x000000009d0014a4                updateBatteryVoltage
                0x000000009d00304c                readGroundSensor
                0x000000009d005bc8                test_labyrinth_explore
                0x000000009d007108                reset_stop_at_starting_point
                0x000000009d004cdc                set_GoalField
                0x000000009d0025ec                __gxx_personality_v0
                0x000000009d002bb4                get_closest_direction
                0x000000009d00636c                labyrinth_return_home
                0x000000009d002260                isr_t2
                0x000000009d001abc                led
                0x000000009d007640                test_follow_starting_point
                0x000000009d004ce4                set_CurrentField
                0x000000009d001b68                setSP2
                0x000000009d0067a4                follow_path
                0x000000009d001b18                leds
                0x000000009d007110                set_return_priority_list
                0x000000009d004280                sensors_init
                0x000000009d002694                sendChar
                0x000000009d005d08                avoid_colision
                0x000000009d004140                refresh_sensorReadings
                0x000000009d002cd8                get_filteredSensorReadings
                0x000000009d0062bc                set_follow_path_to_unexplored_field
                0x000000009d002220                wait
                0x000000009d0056f0                rotateRel_naive
                0x000000009d007478                change_behavior_priority
                0x000000009d002ee8                readBeaconSensor
                0x000000009d0038d8                calculate_filteredSensorReadings_weighted_avrage
                0x000000009d006260                reset_follow_path
                0x000000009d007100                wounder
                0x000000009d00164c                initPIC32
                0x000000009d007628                behaviors_finish
                0x000000009d0033a4                check_for_offset
                0x000000009d003194                save_reading_to_buffer
                0x000000009d00525c                points_are_in_line
                0x000000009d0026e8                normalize_angle
                0x000000009d006240                reset_labyrinth_explore
                0x000000009d005f70                move_to_point
                0x000000009d0080dc                main
                0x000000009d003704                readCompassSensor
                0x000000009d0058dc                movement_rotate
                0x000000009d006314                set_follow_path_to_return_home
                0x000000009d004fac                calculate_shortest_paths
                0x000000009d0029d8                distance_between_points
                0x000000009d002858                abs_angle_difference
                0x000000009d002978                angle_to_dest
                0x000000009d00288c                deg_to_rad
                0x000000009d001bf0                readEncoders
                0x000000009d005348                map_init
                0x000000009d0026dc                txc_bt
                0x000000009d005cc8                stop_at_starting_point
                0x000000009d005120                get_path_to_unexplored_field
                0x000000009d0058f4                movement_travel_in_curve_radius
                0x000000009d00210c                delay
                0x000000009d001bb8                setVel2
                0x000000009d003c50                order_double_array
                0x000000009d0045b4                print_out_map
                0x000000009d005890                movement_go_forward
                0x000000009d005898                movement_stop
                0x000000009d001b5c                batteryVoltage
                0x000000009d005c38                stop_at_beacon
                0x000000009d005da0                test_avoid_colision
                0x000000009d001ba4                setPWM2
                0x000000009d00420c                refresh_buffer
                0x000000009d005d98                reset_avoid_colision
                0x000000009d007fb4                test_follow_beacon
                0x000000009d002904                angle_between_points
                0x000000009d007648                follow_starting_point
                0x000000009d005ae0                movement_travel_in_curve_radius_direction
                0x000000009d0070e0                reset_labyrinth_return_home
                0x000000009d007fac                reset_follow_beacon
                0x000000009d001f20                updateLocalization
                0x000000009d001c1c                actuateMotors
                0x000000009d0070f8                test_wounder
                0x000000009d0063c0                check_current_position_offset
                0x000000009d007c90                follow_wall
                0x000000009d0050a4                get_path_to_starting_field
                0x000000009d003d7c                calculate_filteredSensorReadings
                0x000000009d005014                set_shortest_paths
                0x000000009d005b6c                test_correct_position
                0x000000009d002158                readLineSensors
                0x000000009d004dfc                dijkstra_shortest_path
                0x000000009d00276c                normalize_angle_to_positive
                0x000000009d0053ec                driveMotors
                0x000000009d003544                readObstacleSensors
                0x000000009d001be8                closedLoopControl
                0x000000009d004508                get_new_sensorReadings
                0x000000009d001b38                obstacleSensor
                0x000000009d004250                get_accurate_sensor_reading
 .text          0x000000009d008324      0x990 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x000000009d00832c                xprintf
 .text          0x000000009d008cb4      0x18c ./libcompass.a(rmi_compass.o)
                0x000000009d008d88                getCompassValue
                0x000000009d008cb4                initCompass
 .text          0x000000009d008e40      0xb58 ./libcompass.a(can_pic32.o)
                0x000000009d00952c                CANSetTxPriority
                0x000000009d009770                CANReceiveMessage
                0x000000009d0090cc                CANSetMemoryAddress
                0x000000009d009208                CANConfigRxChannel
                0x000000009d0098ec                CANResetFIFO
                0x000000009d0095d8                CANSendMessage
                0x000000009d00902c                CANSetOperateMode
                0x000000009d008e40                CANConfigBaudRate
                0x000000009d009420                CANConfigFIFO
                0x000000009d00913c                CANConfigMask
 .text.atan2    0x000000009d009998       0xe4 /opt/pic32mx/lib/libm.a(w_atan32.o)
                0x000000009d009998                atan2
 .text          0x000000009d009a7c      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d009a7c                cos
                0x000000009d009a7c                dpcos
 .text          0x000000009d009c1c      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d009c1c                dpsin
                0x000000009d009c1c                sin
 .text          0x000000009d009db4      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d009db4                reduct
 .text          0x000000009d009f68      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d00a13c                exadd
                0x000000009d00a070                exmul
                0x000000009d009f68                sigmax
                0x000000009d00a2d8                exdiv
                0x000000009d00a228                exsub
 .text          0x000000009d00a53c     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d00b5ec                fabs
                0x000000009d00b4b0                __eqdf2
                0x000000009d00b4b0                __gtdf2
                0x000000009d00a53c                dpsub
                0x000000009d00b144                __floatsidf
                0x000000009d00b4b0                __ltdf2
                0x000000009d00b1b8                ultodp
                0x000000009d00a968                dpmul
                0x000000009d00b2ac                dptofp
                0x000000009d00b42c                __fixunsdfsi
                0x000000009d00b4b0                dpcmp
                0x000000009d00b208                __extendsfdf2
                0x000000009d00a544                __adddf3
                0x000000009d00b42c                dptoul
                0x000000009d00ac90                dpdiv
                0x000000009d00b144                litodp
                0x000000009d00b3a4                __fixdfsi
                0x000000009d00b4b0                __ledf2
                0x000000009d00b208                fptodp
                0x000000009d00b5d4                __negdf2
                0x000000009d00a544                dpadd
                0x000000009d00ac90                __divdf3
                0x000000009d00a968                __muldf3
                0x000000009d00b2ac                __truncdfsf2
                0x000000009d00b4b0                __nedf2
                0x000000009d00b3a4                dptoli
                0x000000009d00b608                nan
                0x000000009d00b5ec                dpfabs
                0x000000009d00b4b0                __gedf2
                0x000000009d00b608                dpnan
                0x000000009d00a53c                __subdf3
 .text.sqrt     0x000000009d00b664       0x80 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                0x000000009d00b664                sqrt
 .text          0x000000009d00b6e4      0x2e0 /opt/pic32mx/lib/libm.a(atan32.o)
                0x000000009d00b6e4                dpatan2
                0x000000009d00b6e4                __mchp_atan2
 .text          0x000000009d00b9c4      0x5bc /opt/pic32mx/lib/libm.a(sqrt32.o)
                0x000000009d00bc5c                __mchp_sqrt
                0x000000009d00b9c4                exsqrt
                0x000000009d00bc5c                dpsqrt
 .text          0x000000009d00bf80      0x384 /opt/pic32mx/lib/libm.a(arc32.o)
                0x000000009d00c240                dpatan
                0x000000009d00bf80                exatan
                0x000000009d00c240                atan
 .text.exit     0x000000009d00c304       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d00c304                exit
 .text._cleanup
                0x000000009d00c320       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d00c320                _cleanup
 .text._exit    0x000000009d00c380        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d00c380                _exit
 .text.fclose   0x000000009d00c388      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d00c388                fclose
 .text.fflush   0x000000009d00c49c       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d00c49c                fflush
 .text._bufallo
                0x000000009d00c560       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d00c560                _bufallo
 .text._buffree
                0x000000009d00c5b8       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d00c5b8                _buffree
 .text.getpagesize
                0x000000009d00c5c8        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c5c8                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d00c5d0       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c5d0                _stub_sbd_memlayout
                0x000000009d00c5d0                _sbd_memlayout
 .text._sbrk_init
                0x000000009d00c5fc      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c5fc                _sbrk_init
 .text._sbrk    0x000000009d00c754       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c754                _sbrk
 .text.sbrk     0x000000009d00c810       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c810                sbrk
 .text.write    0x000000009d00c884       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d00c884                write
 .text.remove   0x000000009d00c92c        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d00c92c                remove
 .text.close    0x000000009d00c934        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d00c934                close
 .text          0x000000009d00c93c       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d00c93c                memset
 .text._mon_putc
                0x000000009d00c9e4       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d00c9e4                _mon_putc
 .text          0x000000009d00ca88       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d00caf8                printStr
                0x000000009d00cad8                printInt
                0x000000009d00cab8                readInt
                0x000000009d00cb30                resetCoreTimer
                0x000000009d00caa8                putChar
                0x000000009d00cb08                readStr
                0x000000009d00cb18                exxt
                0x000000009d00cae8                printInt10
                0x000000009d00ca88                inkey
                0x000000009d00ca98                getChar
                0x000000009d00cac8                readInt10
                0x000000009d00cb28                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d00cb38                _text_end = .

.rodata         0x000000009d00cb38      0x744
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000009d00cb38       0x3c project2_main.o
                0x000000009d00cb3c                KI_num
                0x000000009d00cb44                KP_num
                0x000000009d00cb38                KI_den
                0x000000009d00cb40                KP_den
 *fill*         0x000000009d00cb74        0x4 00
 .rodata.cst8   0x000000009d00cb78      0x140 project2_main.o
                                        0x230 (size before relaxing)
 .rodata.str1.4
                0x000000009d00ccb8      0x4fc project2_main.o
                                        0x500 (size before relaxing)
 .rodata.cst4   0x000000009d00d1b4        0x4 project2_main.o
 .rodata.str1.4
                0x000000009d00d1b8       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x14 (size before relaxing)
 *fill*         0x000000009d00d1c9        0x7 00
 .rodata.cst8   0x000000009d00d1d0       0x10 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x20 (size before relaxing)
 .rodata        0x000000009d00d1e0       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .rodata        0x000000009d00d264       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d00d27c                . = ALIGN (0x4)
 *fill*         0x000000009d00d279        0x3 00

.sdata2         0x000000009d00d27c        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d00d27c                . = ALIGN (0x4)

.sbss2          0x000000009d00d27c        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d00d27c                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x2ec load address 0x000000009d00d27c
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x30 project2_main.o
                0x00000000a0000000                uart_offsets
 .data          0x00000000a0000030       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000030                sincon
                0x00000000a0000068                coscon
 .data.math_errhandling_flag
                0x00000000a00000a0        0x4 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
                0x00000000a00000a0                math_errhandling
 .data          0x00000000a00000a4      0x1a8 /opt/pic32mx/lib/libm.a(arc32.o)
 .data          0x00000000a000024c       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a000024c                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d00d27c                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a00082e0                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a00002ec       0x20 load address 0x000000009d00d568
                0x00000000a00002ec                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a00002ec       0x18 project2_main.o
                0x00000000a00002f0                beacon_servo_sensor_limit_left
                0x00000000a00002ec                beacon_servo_sensor_limit_right
                0x00000000a00002f4                SERVO_WIDTH_MAX
                0x00000000a00002f8                SERVO_WIDTH_MIN
 .sdata         0x00000000a0000304        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000304                _Files
 .sdata         0x00000000a0000308        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a0000308                __C32_UART
                0x00000000a000030c                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a000030c                . = ALIGN (0x4)
                0x00000000a000030c                _data_end = .
                0x00000000a000030c                _bss_begin = .

.sbss           0x00000000a0000310      0x10c
                0x00000000a0000310                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a0000310       0xd0 project2_main.o
                0x00000000a0000314                beacon_servo_counter
                0x00000000a000031c                beacon_servo_pos
                0x00000000a0000320                bt_enable
                0x00000000a0000310                save_breadcrumbs_counter
                0x00000000a0000318                beacon_servo_dir
 .sbss          0x00000000a00003e0        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a00003e4        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a00003e8                _minbrk
                0x00000000a00003e4                _maxbrk
 *(.scommon)
 .scommon       0x00000000a00003f0       0x1c project2_main.o
                0x00000000a00003f0                tick80ms
                0x00000000a00003f4                tick20ms
                0x00000000a00003f8                tick40ms
                0x00000000a00003fc                tick160ms
                0x00000000a0000400                tick10ms
                0x00000000a0000404                beh_correct_position
 .scommon       0x00000000a000040c        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a000040c                errno
 .scommon       0x00000000a0000410        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a0000410                _atexitptr
 .scommon       0x00000000a0000414        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000414                _outdone
 *fill*         0x00000000a0000415        0x3 00
 .scommon       0x00000000a0000418        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a0000418                _tfilesptr
                0x00000000a000041c                _sbss_end = .

.bss            0x00000000a0000420    0x124c0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a0000420     0xa368 project2_main.o
 .bss           0x00000000a000a788       0xd0 ./libcompass.a(rmi_compass.o)
 .bss           0x00000000a000a858       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a000a870     0x8030 project2_main.o
                0x00000000a000a870                sensor_sensorReadings
                0x00000000a00125f8                internal_values
                0x00000000a0012820                movements_last_values
                0x00000000a0012830                sensor_filteredSensorReadings
                0x00000000a0012888                analogSensors
 COMMON         0x00000000a00128a0       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00128a0                _sibuf
                0x00000000a00128c0                _sobuf
                0x00000000a00128e0                . = ALIGN (0x4)
                0x00000000a00128e0                . = ALIGN (0x4)
                0x00000000a00128e0                _end = .
                0x00000000a00128e0                _bss_end = .

.persist        0x00000000a00128e0        0x0
 *(.persist)
                0x00000000a00128e0                . = ALIGN (0x4)

.heap           0x00000000a00128e0        0x0
                0x00000000a00128e0                _heap = .
                0x00000000a00128e0                . = (. + _min_heap_size)

.stack          0x00000000a00128e0     0x2000
                0x00000000a00128e0                _splim = .
                0x00000000a00128e0                _SPLIM = .
                0x00000000a00148e0                . = (. + _min_stack_size)
 *fill*         0x00000000a00128e0     0x2000 00

.ramfunc        0x00000000a0015000        0x0 load address 0x000000009d00d588
                0x00000000a0015000                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0015000                . = ALIGN (0x4)
                0x00000000a0015000                _ramfunc_end = .
                0x000000009d00d588                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000015000                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000     0x15e0
 *(.pdr)
 .pdr           0x0000000000000000     0x11c0 project2_main.o
 .pdr           0x00000000000011c0       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x0000000000001200       0x40 ./libcompass.a(rmi_compass.o)
 .pdr           0x0000000000001240      0x140 ./libcompass.a(can_pic32.o)
 .pdr           0x0000000000001380       0x20 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .pdr           0x00000000000013a0       0x20 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .pdr           0x00000000000013c0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x00000000000013e0       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000001400       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x0000000000001420       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x0000000000001440       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x0000000000001460       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x00000000000014a0       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x0000000000001540       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x0000000000001560       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x0000000000001580       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x00000000000015a0       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x00000000000015c0       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 project2_main.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x73f
 *(.comment)
 .comment       0x0000000000000000       0x4d project2_main.o
 .comment       0x000000000000004d       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x000000000000009a       0x4d ./libcompass.a(rmi_compass.o)
 .comment       0x00000000000000e7       0x4d ./libcompass.a(can_pic32.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libm.a(w_atan32.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x000000000000039c       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x00000000000003e9       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x0000000000000436       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x0000000000000483       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x00000000000004d0       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x0000000000000568       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x00000000000005b5       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x0000000000000602       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x000000000000064f       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x00000000000006a5       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x00000000000006f2       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x230
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x00000000000000a0       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x00000000000000c8       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x00000000000000f0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x0000000000000118       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x0000000000000148       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x0000000000000190       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x00000000000001b8       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x00000000000001e0       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x0000000000000208       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x292
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1c /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_pubnames
                0x000000000000001c       0x1b /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_pubnames
                0x0000000000000037       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x0000000000000053       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x000000000000006e       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x000000000000009c       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x00000000000000b8       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x0000000000000101       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x000000000000011e       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000000000013b       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x0000000000000167       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x0000000000000188       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x00000000000001fc       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x0000000000000218       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x0000000000000235       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x0000000000000251       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x0000000000000271       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xe20
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x30 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_info    0x0000000000000030       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_info    0x0000000000000060       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x000000000000009f       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x0000000000000109      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x0000000000000248       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x0000000000000292      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x00000000000003e2      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x0000000000000544       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x0000000000000635      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x000000000000077a      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x00000000000008a1      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000b23       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000b9f       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000c48       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000ce6       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000de1       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x8a8
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x23 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_abbrev  0x0000000000000023       0x23 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_abbrev  0x0000000000000046        0x1 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .debug_abbrev  0x0000000000000047       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x0000000000000077       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x00000000000000d7       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x0000000000000194       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x00000000000001d5       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x0000000000000256       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x0000000000000322       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x00000000000003a2      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x00000000000004ab       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x000000000000053b      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x000000000000068e       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x0000000000000701       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x0000000000000780       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000007ef       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000878       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1922
 *(.debug_line)
 .debug_line    0x0000000000000000       0x92 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_line    0x0000000000000092       0x90 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_line    0x0000000000000122      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x000000000000029e      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x000000000000043b      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x00000000000005f4       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x0000000000000692      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000000000000828      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000a14      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000000000000bf8      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x0000000000000e50      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000000fe8      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x00000000000013ab       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000146d      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x0000000000001617      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x00000000000017c0       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001893       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x29c
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x3c /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_frame   0x000000000000003c       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_frame   0x000000000000006c       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x0000000000000098       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x00000000000000c8       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x00000000000000e8       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x0000000000000118       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x0000000000000144       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x000000000000017c       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x0000000000000208       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x000000000000023c       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x000000000000025c       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x000000000000027c       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0xa9c
 *(.debug_str)
 .debug_str     0x0000000000000000       0xbf /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_str     0x00000000000000bf       0x75 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                                         0xbc (size before relaxing)
 .debug_str     0x0000000000000134       0x72 /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x00000000000001a6       0x8f /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x0000000000000235       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x0000000000000309       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000037d       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x0000000000000406       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x0000000000000493       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x0000000000000507       0xb6 /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x00000000000005bd       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x000000000000062a      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000072b       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000007ad       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000088a       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x000000000000094c       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000a2d       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x14835
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x0000000000000dbb      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000001971     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x00000000000037b8      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x00000000000040e7     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x0000000000005f35     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000007d9f     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x0000000000009bf8     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000bfad     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000ddf4     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x000000000000ef8d      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x000000000000f8bc     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000011703     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x000000000001354a      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x0000000000013f06      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(project2_main.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d00d588        0x0

.rel.dyn        0x000000009d00d588        0x0

.debug_ranges   0x000000009d00d588       0x18
 .debug_ranges  0x000000009d00d588       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
